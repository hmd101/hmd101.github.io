---
---

@string{aps = {American Physical Society,}}

@inproceedings{walter2019executable,
  title       = {Executable State Machines Derived from Structured Textual Requirements-Connecting Requirements and Formal System Design},
  author      = {Walter, Benedikt and Martin, Jan and Schmidt, Jonathan and Dettki, Hanna and Rudolph, Stephan},
  booktitle   = {Proceedings of the 7th International Conference on Model-Driven Engineering and Software Development},
  pages       = {193--200},
  year        = {2019},
  html        = {https://dl.acm.org/doi/abs/10.5220/0007236601930200},
  pdf         = {https://pdfs.semanticscholar.org/e5fa/3d81d3070b561362235a5a862d7f7f436940.pdf},
  abstract    = {There exists a gap between (textual) requirements specification and systems created in the system design process. System design, particular in automotive, is a tremendously complex process. The sheer number of requirements for a system is too high to be considered at once. In industrial contexts, complex systems are commonly created through many design iterations with numerous hardware samples and software versions build. System experts include many experience-based design decisions in the process. This approach eventually leads to a somewhat consistent system without formal consideration of requirements or a traceable design decision process. The process leaves a de facto gap between specification and system design. Ideally, requirements constrain the initial solution space and system design can choose between the design variants consistent with that reduced solution space. In reality, the true solution space is unknown and the effect of particular requirements on that solution space is a guessing game. Therefore, we want to propose a process chain that formally includes requirements in the system design process and generates an executable system model. Requirements documented as structured text are mapped into the logic space. Temporal logic allows generation of consistent static state machines. Extracting and modelling input/output signals of that state machine enables us to generate an executable system model, fully derived from its requirements. This bridges the existing gap between requirements specification and system design. The correctness and usefulness of this approach is shown in a case study on automotive systems at Daimler AG.},
  preview     = {executable-state-machines.png},
  bibtex_show = {true},
  selected    = {false}
}